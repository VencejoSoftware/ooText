<?xml version="1.0" encoding="UTF-8"?>
<CONFIG>
  <ProjectOptions>
    <Version Value="10"/>
    <PathDelim Value="\"/>
    <General>
      <Flags>
        <SaveClosedFiles Value="False"/>
        <MainUnitHasUsesSectionForAllUnits Value="False"/>
        <MainUnitHasCreateFormStatements Value="False"/>
        <MainUnitHasTitleStatement Value="False"/>
        <MainUnitHasScaledStatement Value="False"/>
        <SaveJumpHistory Value="False"/>
        <SaveFoldState Value="False"/>
      </Flags>
      <SessionStorage Value="InProjectDir"/>
      <MainUnit Value="0"/>
      <Title Value="test"/>
      <UseAppBundle Value="False"/>
      <ResourceType Value="res"/>
    </General>
    <BuildModes Count="3">
      <Item1 Name="Default" Default="True"/>
      <Item2 Name="Debug">
        <CompilerOptions>
          <Version Value="11"/>
          <PathDelim Value="\"/>
          <SearchPaths>
            <IncludeFiles Value="$(ProjOutDir)"/>
            <OtherUnitFiles Value="$env(delphi3rdParty)\dunit-agiledoxtestrunner;$env(delphi3rdParty)\dcpcrypt;$env(delphi3rdParty)\generics.collections\src;$env(delphi3rdParty)\dcpcrypt\Ciphers;$env(delphi3rdParty)\dcpcrypt\Hashes;..\..\..\ooBatch\code;..\..\..\ooGeneric\code;..\..\code;..\code"/>
            <UnitOutputDirectory Value="..\build\debug"/>
          </SearchPaths>
          <Parsing>
            <SyntaxOptions>
              <SyntaxMode Value="Delphi"/>
              <IncludeAssertionCode Value="True"/>
            </SyntaxOptions>
          </Parsing>
          <CodeGeneration>
            <Checks>
              <IOChecks Value="True"/>
              <RangeChecks Value="True"/>
              <OverflowChecks Value="True"/>
              <StackChecks Value="True"/>
            </Checks>
            <VerifyObjMethodCallValidity Value="True"/>
          </CodeGeneration>
          <Linking>
            <Debugging>
              <DebugInfoType Value="dsDwarf2"/>
              <UseHeaptrc Value="True"/>
              <TrashVariables Value="True"/>
              <UseValgrind Value="True"/>
              <StripSymbols Value="True"/>
              <UseExternalDbgSyms Value="True"/>
            </Debugging>
          </Linking>
          <Other>
            <CustomOptions Value="-dBorland -dVer150 -dDelphi7 -dCompiler6_Up -dPUREPASCAL -Xm"/>
          </Other>
        </CompilerOptions>
      </Item2>
      <Item3 Name="Release">
        <CompilerOptions>
          <Version Value="11"/>
          <PathDelim Value="\"/>
          <SearchPaths>
            <IncludeFiles Value="$(ProjOutDir)"/>
            <OtherUnitFiles Value="$env(delphi3rdParty)\dunit-agiledoxtestrunner;$env(delphi3rdParty)\dcpcrypt;$env(delphi3rdParty)\generics.collections\src;$env(delphi3rdParty)\dcpcrypt\Ciphers;$env(delphi3rdParty)\dcpcrypt\Hashes;..\..\..\ooBatch\code;..\..\..\ooGeneric\code;..\..\code;..\code"/>
            <UnitOutputDirectory Value="..\build\release"/>
          </SearchPaths>
          <Parsing>
            <SyntaxOptions>
              <SyntaxMode Value="Delphi"/>
            </SyntaxOptions>
          </Parsing>
          <CodeGeneration>
            <SmartLinkUnit Value="True"/>
            <Optimizations>
              <OptimizationLevel Value="3"/>
            </Optimizations>
          </CodeGeneration>
          <Linking>
            <Debugging>
              <GenerateDebugInfo Value="False"/>
            </Debugging>
            <LinkSmart Value="True"/>
            <Options>
              <Win32>
                <GraphicApplication Value="True"/>
              </Win32>
            </Options>
          </Linking>
          <Other>
            <CustomOptions Value="-dBorland -dVer150 -dDelphi7 -dCompiler6_Up -dPUREPASCAL"/>
          </Other>
        </CompilerOptions>
      </Item3>
    </BuildModes>
    <PublishOptions>
      <Version Value="2"/>
    </PublishOptions>
    <RunParams>
      <local>
        <FormatVersion Value="1"/>
      </local>
    </RunParams>
    <RequiredPackages Count="3">
      <Item1>
        <PackageName Value="FCL"/>
      </Item1>
      <Item2>
        <PackageName Value="fpcunittestrunner"/>
      </Item2>
      <Item3>
        <PackageName Value="LCL"/>
      </Item3>
    </RequiredPackages>
    <Units Count="22">
      <Unit0>
        <Filename Value="test.lpr"/>
        <IsPartOfProject Value="True"/>
      </Unit0>
      <Unit1>
        <Filename Value="..\code\ooText.Beautify_test.pas"/>
        <IsPartOfProject Value="True"/>
      </Unit1>
      <Unit2>
        <Filename Value="..\code\ooText.Cutted_test.pas"/>
        <IsPartOfProject Value="True"/>
      </Unit2>
      <Unit3>
        <Filename Value="..\code\ooText.FromArray_test.pas"/>
        <IsPartOfProject Value="True"/>
      </Unit3>
      <Unit4>
        <Filename Value="..\code\ooText.Match.Reverse_test.pas"/>
        <IsPartOfProject Value="True"/>
      </Unit4>
      <Unit5>
        <Filename Value="..\code\ooText.Match.WordInsensitive_test.pas"/>
        <IsPartOfProject Value="True"/>
      </Unit5>
      <Unit6>
        <Filename Value="..\code\ooText.Match.WordSensitive_test.pas"/>
        <IsPartOfProject Value="True"/>
      </Unit6>
      <Unit7>
        <Filename Value="..\code\ooText.MatchInsensitive_test.pas"/>
        <IsPartOfProject Value="True"/>
      </Unit7>
      <Unit8>
        <Filename Value="..\code\ooText.MatchSensitive_test.pas"/>
        <IsPartOfProject Value="True"/>
      </Unit8>
      <Unit9>
        <Filename Value="..\code\ooText.MoneyPlain_test.pas"/>
        <IsPartOfProject Value="True"/>
      </Unit9>
      <Unit10>
        <Filename Value="..\code\ooText.PadZeros_test.pas"/>
        <IsPartOfProject Value="True"/>
      </Unit10>
      <Unit11>
        <Filename Value="..\code\ooText.Random_test.pas"/>
        <IsPartOfProject Value="True"/>
      </Unit11>
      <Unit12>
        <Filename Value="..\code\ooText.RandomFixed_test.pas"/>
        <IsPartOfProject Value="True"/>
      </Unit12>
      <Unit13>
        <Filename Value="..\code\ooText.Replace_test.pas"/>
        <IsPartOfProject Value="True"/>
      </Unit13>
      <Unit14>
        <Filename Value="..\code\ooText.Secure_test.pas"/>
        <IsPartOfProject Value="True"/>
      </Unit14>
      <Unit15>
        <Filename Value="..\code\ooText.Stencil.Wildcard_test.pas"/>
        <IsPartOfProject Value="True"/>
      </Unit15>
      <Unit16>
        <Filename Value="..\code\ooText.Stencil_test.pas"/>
        <IsPartOfProject Value="True"/>
      </Unit16>
      <Unit17>
        <Filename Value="..\code\ooText.Tokenize_test.pas"/>
        <IsPartOfProject Value="True"/>
      </Unit17>
      <Unit18>
        <Filename Value="..\code\ooText.ToWords_test.pas"/>
        <IsPartOfProject Value="True"/>
      </Unit18>
      <Unit19>
        <Filename Value="..\code\ooText.Unformat_test.pas"/>
        <IsPartOfProject Value="True"/>
      </Unit19>
      <Unit20>
        <Filename Value="..\code\ooText.WordDelimiter_test.pas"/>
        <IsPartOfProject Value="True"/>
      </Unit20>
      <Unit21>
        <Filename Value="..\code\ooText_test.pas"/>
        <IsPartOfProject Value="True"/>
      </Unit21>
    </Units>
  </ProjectOptions>
  <CompilerOptions>
    <Version Value="11"/>
    <PathDelim Value="\"/>
    <SearchPaths>
      <IncludeFiles Value="$(ProjOutDir)"/>
      <OtherUnitFiles Value="$env(delphi3rdParty)\dunit-agiledoxtestrunner;$env(delphi3rdParty)\dcpcrypt;$env(delphi3rdParty)\generics.collections\src;$env(delphi3rdParty)\dcpcrypt\Ciphers;$env(delphi3rdParty)\dcpcrypt\Hashes;..\..\..\ooBatch\code;..\..\..\ooGeneric\code;..\..\code;..\code"/>
      <UnitOutputDirectory Value="..\build\$(TargetCPU)-$(TargetOS)"/>
    </SearchPaths>
    <Parsing>
      <SyntaxOptions>
        <SyntaxMode Value="Delphi"/>
      </SyntaxOptions>
    </Parsing>
    <Linking>
      <Options>
        <Win32>
          <GraphicApplication Value="True"/>
        </Win32>
      </Options>
    </Linking>
    <Other>
      <CustomOptions Value="-dBorland -dVer150 -dDelphi7 -dCompiler6_Up -dPUREPASCAL"/>
    </Other>
  </CompilerOptions>
  <Debugging>
    <Exceptions Count="3">
      <Item1>
        <Name Value="EAbort"/>
      </Item1>
      <Item2>
        <Name Value="ECodetoolError"/>
      </Item2>
      <Item3>
        <Name Value="EFOpenError"/>
      </Item3>
    </Exceptions>
  </Debugging>
</CONFIG>
